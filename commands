docker exec -it docker_script-database-1 bash
docker ps
docker compose up
mysql -u root -p
mysql -u alex -p
docker cp ./ml-latest-small/. docker_script-database-1:/database
use movielens;
CREATE USER 'alex'@'%' IDENTIFIED BY 'alex';
GRANT ALL PRIVILEGES ON movielens.* to 'alex'@'%';

LOAD DATA LOCAL INFILE './links.csv' INTO TABLE links FIELDS TERMINATED BY ',' LINES TERMINATED BY '\n' IGNORE 1 ROWS;
LOAD DATA LOCAL INFILE './movies.csv' INTO TABLE movies FIELDS TERMINATED BY ',' LINES TERMINATED BY '\n' IGNORE 1 ROWS;
LOAD DATA LOCAL INFILE './ratings.csv' INTO TABLE ratings FIELDS TERMINATED BY ',' LINES TERMINATED BY '\n' IGNORE 1 ROWS;
LOAD DATA LOCAL INFILE './tags.csv' INTO TABLE tags FIELDS TERMINATED BY ',' LINES TERMINATED BY '\n' IGNORE 1 ROWS;

CREATE TABLE links (movieId INT PRIMARY KEY, imdbId INT, tmdbId INT);
CREATE TABLE movies (movieId INT PRIMARY KEY, title VARCHAR(50), genres VARCHAR(50));
CREATE TABLE ratings (userId INT, movieId INT, rating INT, timestamp INT);
CREATE TABLE tags (userId INT, movieId INT, rating INT, tag VARCHAR(50), timestamp INT);

1. SELECT COUNT(*) FROM movies;
3. SELECT title, r.n FROM movies m JOIN (SELECT movieId, SUM(rating)/COUNT(movieId) n FROM ratings GROUP BY movieId) r ON m.movieId = r.movieid ORDER BY r.n DESC LIMIT 10;
4. SELECT userId, COUNT(*) AS rating_count FROM ratings GROUP BY userId ORDER BY rating_count DESC LIMIT 5;
6. SELECT movieId, title FROM movies WHERE (SELECT SUBSTRING(title FROM (SELECT INSTR(title, '(')+1) FOR 4))='1995';

5. SELECT movieId FROM ratings WHERE timestamp=(SELECT MAX(timestamp) FROM ratings) or timestamp=(SELECT MIN(timestamp) FROM ratings);
